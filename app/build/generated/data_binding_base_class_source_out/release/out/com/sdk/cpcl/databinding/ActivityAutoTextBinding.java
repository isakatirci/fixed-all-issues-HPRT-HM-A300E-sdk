// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAutoTextBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPrint;

  @NonNull
  public final CheckBox cbSetmag;

  @NonNull
  public final CheckBox cbTextformatBold;

  @NonNull
  public final EditText edPageHeight;

  @NonNull
  public final EditText edPageWidth;

  @NonNull
  public final EditText edX;

  @NonNull
  public final EditText edY;

  @NonNull
  public final EditText etMessage;

  @NonNull
  public final Spinner spinCodepage;

  @NonNull
  public final Spinner spinFont;

  private ActivityAutoTextBinding(@NonNull LinearLayout rootView, @NonNull Button btnPrint,
      @NonNull CheckBox cbSetmag, @NonNull CheckBox cbTextformatBold,
      @NonNull EditText edPageHeight, @NonNull EditText edPageWidth, @NonNull EditText edX,
      @NonNull EditText edY, @NonNull EditText etMessage, @NonNull Spinner spinCodepage,
      @NonNull Spinner spinFont) {
    this.rootView = rootView;
    this.btnPrint = btnPrint;
    this.cbSetmag = cbSetmag;
    this.cbTextformatBold = cbTextformatBold;
    this.edPageHeight = edPageHeight;
    this.edPageWidth = edPageWidth;
    this.edX = edX;
    this.edY = edY;
    this.etMessage = etMessage;
    this.spinCodepage = spinCodepage;
    this.spinFont = spinFont;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAutoTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAutoTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_auto_text, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAutoTextBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_print;
      Button btnPrint = ViewBindings.findChildViewById(rootView, id);
      if (btnPrint == null) {
        break missingId;
      }

      id = R.id.cb_setmag;
      CheckBox cbSetmag = ViewBindings.findChildViewById(rootView, id);
      if (cbSetmag == null) {
        break missingId;
      }

      id = R.id.cb_textformat_bold;
      CheckBox cbTextformatBold = ViewBindings.findChildViewById(rootView, id);
      if (cbTextformatBold == null) {
        break missingId;
      }

      id = R.id.ed_page_height;
      EditText edPageHeight = ViewBindings.findChildViewById(rootView, id);
      if (edPageHeight == null) {
        break missingId;
      }

      id = R.id.ed_page_width;
      EditText edPageWidth = ViewBindings.findChildViewById(rootView, id);
      if (edPageWidth == null) {
        break missingId;
      }

      id = R.id.ed_x;
      EditText edX = ViewBindings.findChildViewById(rootView, id);
      if (edX == null) {
        break missingId;
      }

      id = R.id.ed_y;
      EditText edY = ViewBindings.findChildViewById(rootView, id);
      if (edY == null) {
        break missingId;
      }

      id = R.id.et_message;
      EditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.spin_codepage;
      Spinner spinCodepage = ViewBindings.findChildViewById(rootView, id);
      if (spinCodepage == null) {
        break missingId;
      }

      id = R.id.spin_font;
      Spinner spinFont = ViewBindings.findChildViewById(rootView, id);
      if (spinFont == null) {
        break missingId;
      }

      return new ActivityAutoTextBinding((LinearLayout) rootView, btnPrint, cbSetmag,
          cbTextformatBold, edPageHeight, edPageWidth, edX, edY, etMessage, spinCodepage, spinFont);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
