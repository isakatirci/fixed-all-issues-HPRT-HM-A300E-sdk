// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWifiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btncancel;

  @NonNull
  public final Button btnconnect;

  @NonNull
  public final TextView lblIPAddress;

  @NonNull
  public final TextView lblPort;

  @NonNull
  public final ProgressBar proBar;

  @NonNull
  public final EditText txtIPAddress;

  @NonNull
  public final TextView txtTips;

  @NonNull
  public final EditText txtWifiPort;

  private ActivityWifiBinding(@NonNull RelativeLayout rootView, @NonNull Button btncancel,
      @NonNull Button btnconnect, @NonNull TextView lblIPAddress, @NonNull TextView lblPort,
      @NonNull ProgressBar proBar, @NonNull EditText txtIPAddress, @NonNull TextView txtTips,
      @NonNull EditText txtWifiPort) {
    this.rootView = rootView;
    this.btncancel = btncancel;
    this.btnconnect = btnconnect;
    this.lblIPAddress = lblIPAddress;
    this.lblPort = lblPort;
    this.proBar = proBar;
    this.txtIPAddress = txtIPAddress;
    this.txtTips = txtTips;
    this.txtWifiPort = txtWifiPort;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWifiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWifiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_wifi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWifiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btncancel;
      Button btncancel = ViewBindings.findChildViewById(rootView, id);
      if (btncancel == null) {
        break missingId;
      }

      id = R.id.btnconnect;
      Button btnconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnconnect == null) {
        break missingId;
      }

      id = R.id.lblIPAddress;
      TextView lblIPAddress = ViewBindings.findChildViewById(rootView, id);
      if (lblIPAddress == null) {
        break missingId;
      }

      id = R.id.lblPort;
      TextView lblPort = ViewBindings.findChildViewById(rootView, id);
      if (lblPort == null) {
        break missingId;
      }

      id = R.id.pro_bar;
      ProgressBar proBar = ViewBindings.findChildViewById(rootView, id);
      if (proBar == null) {
        break missingId;
      }

      id = R.id.txtIPAddress;
      EditText txtIPAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtIPAddress == null) {
        break missingId;
      }

      id = R.id.txtTips;
      TextView txtTips = ViewBindings.findChildViewById(rootView, id);
      if (txtTips == null) {
        break missingId;
      }

      id = R.id.txtWifiPort;
      EditText txtWifiPort = ViewBindings.findChildViewById(rootView, id);
      if (txtWifiPort == null) {
        break missingId;
      }

      return new ActivityWifiBinding((RelativeLayout) rootView, btncancel, btnconnect, lblIPAddress,
          lblPort, proBar, txtIPAddress, txtTips, txtWifiPort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
