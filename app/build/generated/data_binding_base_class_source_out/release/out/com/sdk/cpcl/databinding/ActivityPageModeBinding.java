// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPageModeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPrint;

  @NonNull
  public final EditText edtHPosition;

  @NonNull
  public final EditText edtHeight;

  @NonNull
  public final EditText edtLeftMargin;

  @NonNull
  public final EditText edtText;

  @NonNull
  public final EditText edtTopMargin;

  @NonNull
  public final EditText edtVPosition;

  @NonNull
  public final EditText edtWidth;

  @NonNull
  public final TextView itemName3;

  @NonNull
  public final ScrollView previewDashboardV;

  @NonNull
  public final Spinner spnPrintDirection;

  @NonNull
  public final TextView txtHPosition;

  @NonNull
  public final TextView txtHeight;

  @NonNull
  public final TextView txtLeftMargin;

  @NonNull
  public final TextView txtTopMargin;

  @NonNull
  public final TextView txtVPosition;

  @NonNull
  public final TextView txtWidth;

  private ActivityPageModeBinding(@NonNull LinearLayout rootView, @NonNull Button btnPrint,
      @NonNull EditText edtHPosition, @NonNull EditText edtHeight, @NonNull EditText edtLeftMargin,
      @NonNull EditText edtText, @NonNull EditText edtTopMargin, @NonNull EditText edtVPosition,
      @NonNull EditText edtWidth, @NonNull TextView itemName3,
      @NonNull ScrollView previewDashboardV, @NonNull Spinner spnPrintDirection,
      @NonNull TextView txtHPosition, @NonNull TextView txtHeight, @NonNull TextView txtLeftMargin,
      @NonNull TextView txtTopMargin, @NonNull TextView txtVPosition, @NonNull TextView txtWidth) {
    this.rootView = rootView;
    this.btnPrint = btnPrint;
    this.edtHPosition = edtHPosition;
    this.edtHeight = edtHeight;
    this.edtLeftMargin = edtLeftMargin;
    this.edtText = edtText;
    this.edtTopMargin = edtTopMargin;
    this.edtVPosition = edtVPosition;
    this.edtWidth = edtWidth;
    this.itemName3 = itemName3;
    this.previewDashboardV = previewDashboardV;
    this.spnPrintDirection = spnPrintDirection;
    this.txtHPosition = txtHPosition;
    this.txtHeight = txtHeight;
    this.txtLeftMargin = txtLeftMargin;
    this.txtTopMargin = txtTopMargin;
    this.txtVPosition = txtVPosition;
    this.txtWidth = txtWidth;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPageModeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPageModeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_page_mode, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPageModeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPrint;
      Button btnPrint = ViewBindings.findChildViewById(rootView, id);
      if (btnPrint == null) {
        break missingId;
      }

      id = R.id.edtHPosition;
      EditText edtHPosition = ViewBindings.findChildViewById(rootView, id);
      if (edtHPosition == null) {
        break missingId;
      }

      id = R.id.edtHeight;
      EditText edtHeight = ViewBindings.findChildViewById(rootView, id);
      if (edtHeight == null) {
        break missingId;
      }

      id = R.id.edtLeftMargin;
      EditText edtLeftMargin = ViewBindings.findChildViewById(rootView, id);
      if (edtLeftMargin == null) {
        break missingId;
      }

      id = R.id.edtText;
      EditText edtText = ViewBindings.findChildViewById(rootView, id);
      if (edtText == null) {
        break missingId;
      }

      id = R.id.edtTopMargin;
      EditText edtTopMargin = ViewBindings.findChildViewById(rootView, id);
      if (edtTopMargin == null) {
        break missingId;
      }

      id = R.id.edtVPosition;
      EditText edtVPosition = ViewBindings.findChildViewById(rootView, id);
      if (edtVPosition == null) {
        break missingId;
      }

      id = R.id.edtWidth;
      EditText edtWidth = ViewBindings.findChildViewById(rootView, id);
      if (edtWidth == null) {
        break missingId;
      }

      id = R.id.itemName3;
      TextView itemName3 = ViewBindings.findChildViewById(rootView, id);
      if (itemName3 == null) {
        break missingId;
      }

      id = R.id.preview_dashboard_v;
      ScrollView previewDashboardV = ViewBindings.findChildViewById(rootView, id);
      if (previewDashboardV == null) {
        break missingId;
      }

      id = R.id.spnPrintDirection;
      Spinner spnPrintDirection = ViewBindings.findChildViewById(rootView, id);
      if (spnPrintDirection == null) {
        break missingId;
      }

      id = R.id.txtHPosition;
      TextView txtHPosition = ViewBindings.findChildViewById(rootView, id);
      if (txtHPosition == null) {
        break missingId;
      }

      id = R.id.txtHeight;
      TextView txtHeight = ViewBindings.findChildViewById(rootView, id);
      if (txtHeight == null) {
        break missingId;
      }

      id = R.id.txtLeftMargin;
      TextView txtLeftMargin = ViewBindings.findChildViewById(rootView, id);
      if (txtLeftMargin == null) {
        break missingId;
      }

      id = R.id.txtTopMargin;
      TextView txtTopMargin = ViewBindings.findChildViewById(rootView, id);
      if (txtTopMargin == null) {
        break missingId;
      }

      id = R.id.txtVPosition;
      TextView txtVPosition = ViewBindings.findChildViewById(rootView, id);
      if (txtVPosition == null) {
        break missingId;
      }

      id = R.id.txtWidth;
      TextView txtWidth = ViewBindings.findChildViewById(rootView, id);
      if (txtWidth == null) {
        break missingId;
      }

      return new ActivityPageModeBinding((LinearLayout) rootView, btnPrint, edtHPosition, edtHeight,
          edtLeftMargin, edtText, edtTopMargin, edtVPosition, edtWidth, itemName3,
          previewDashboardV, spnPrintDirection, txtHPosition, txtHeight, txtLeftMargin,
          txtTopMargin, txtVPosition, txtWidth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
