// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDevicelistBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonScan;

  @NonNull
  public final ListView newDevices;

  @NonNull
  public final ListView pairedDevices;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final TextView titleNewDevices;

  @NonNull
  public final TextView titlePairedDevices;

  private ActivityDevicelistBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonScan,
      @NonNull ListView newDevices, @NonNull ListView pairedDevices, @NonNull ProgressBar progress,
      @NonNull TextView titleNewDevices, @NonNull TextView titlePairedDevices) {
    this.rootView = rootView;
    this.buttonScan = buttonScan;
    this.newDevices = newDevices;
    this.pairedDevices = pairedDevices;
    this.progress = progress;
    this.titleNewDevices = titleNewDevices;
    this.titlePairedDevices = titlePairedDevices;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDevicelistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDevicelistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_devicelist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDevicelistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_scan;
      Button buttonScan = ViewBindings.findChildViewById(rootView, id);
      if (buttonScan == null) {
        break missingId;
      }

      id = R.id.new_devices;
      ListView newDevices = ViewBindings.findChildViewById(rootView, id);
      if (newDevices == null) {
        break missingId;
      }

      id = R.id.paired_devices;
      ListView pairedDevices = ViewBindings.findChildViewById(rootView, id);
      if (pairedDevices == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.title_new_devices;
      TextView titleNewDevices = ViewBindings.findChildViewById(rootView, id);
      if (titleNewDevices == null) {
        break missingId;
      }

      id = R.id.title_paired_devices;
      TextView titlePairedDevices = ViewBindings.findChildViewById(rootView, id);
      if (titlePairedDevices == null) {
        break missingId;
      }

      return new ActivityDevicelistBinding((RelativeLayout) rootView, buttonScan, newDevices,
          pairedDevices, progress, titleNewDevices, titlePairedDevices);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
