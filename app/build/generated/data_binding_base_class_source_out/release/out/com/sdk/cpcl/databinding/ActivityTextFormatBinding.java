// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTextFormatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPrint;

  @NonNull
  public final CheckBox cbTextformatBold;

  @NonNull
  public final CheckBox cbTextformatDoubleheight;

  @NonNull
  public final CheckBox cbTextformatDoublewidth;

  @NonNull
  public final CheckBox cbTextformatInverse;

  @NonNull
  public final TextView itemName3;

  @NonNull
  public final LinearLayout linlayoutTextformat1;

  @NonNull
  public final LinearLayout linlayoutTextformat2;

  @NonNull
  public final LinearLayout linlayoutTextformat3;

  @NonNull
  public final LinearLayout linlayoutTextformat4;

  @NonNull
  public final LinearLayout linlayoutTextformat5;

  @NonNull
  public final LinearLayout linlayoutTextformat6;

  @NonNull
  public final ScrollView previewDashboardV;

  @NonNull
  public final Spinner spnformatCodepage;

  @NonNull
  public final Spinner spnformatFont;

  @NonNull
  public final Spinner spnformatRotation;

  @NonNull
  public final TextView tvTextformatBold;

  @NonNull
  public final TextView tvTextformatDoubleheight;

  @NonNull
  public final TextView tvTextformatDoublewidth;

  @NonNull
  public final TextView tvTextformatInverse;

  @NonNull
  public final EditText txtText;

  @NonNull
  public final EditText txtformatX;

  @NonNull
  public final EditText txtformatY;

  private ActivityTextFormatBinding(@NonNull LinearLayout rootView, @NonNull Button btnPrint,
      @NonNull CheckBox cbTextformatBold, @NonNull CheckBox cbTextformatDoubleheight,
      @NonNull CheckBox cbTextformatDoublewidth, @NonNull CheckBox cbTextformatInverse,
      @NonNull TextView itemName3, @NonNull LinearLayout linlayoutTextformat1,
      @NonNull LinearLayout linlayoutTextformat2, @NonNull LinearLayout linlayoutTextformat3,
      @NonNull LinearLayout linlayoutTextformat4, @NonNull LinearLayout linlayoutTextformat5,
      @NonNull LinearLayout linlayoutTextformat6, @NonNull ScrollView previewDashboardV,
      @NonNull Spinner spnformatCodepage, @NonNull Spinner spnformatFont,
      @NonNull Spinner spnformatRotation, @NonNull TextView tvTextformatBold,
      @NonNull TextView tvTextformatDoubleheight, @NonNull TextView tvTextformatDoublewidth,
      @NonNull TextView tvTextformatInverse, @NonNull EditText txtText,
      @NonNull EditText txtformatX, @NonNull EditText txtformatY) {
    this.rootView = rootView;
    this.btnPrint = btnPrint;
    this.cbTextformatBold = cbTextformatBold;
    this.cbTextformatDoubleheight = cbTextformatDoubleheight;
    this.cbTextformatDoublewidth = cbTextformatDoublewidth;
    this.cbTextformatInverse = cbTextformatInverse;
    this.itemName3 = itemName3;
    this.linlayoutTextformat1 = linlayoutTextformat1;
    this.linlayoutTextformat2 = linlayoutTextformat2;
    this.linlayoutTextformat3 = linlayoutTextformat3;
    this.linlayoutTextformat4 = linlayoutTextformat4;
    this.linlayoutTextformat5 = linlayoutTextformat5;
    this.linlayoutTextformat6 = linlayoutTextformat6;
    this.previewDashboardV = previewDashboardV;
    this.spnformatCodepage = spnformatCodepage;
    this.spnformatFont = spnformatFont;
    this.spnformatRotation = spnformatRotation;
    this.tvTextformatBold = tvTextformatBold;
    this.tvTextformatDoubleheight = tvTextformatDoubleheight;
    this.tvTextformatDoublewidth = tvTextformatDoublewidth;
    this.tvTextformatInverse = tvTextformatInverse;
    this.txtText = txtText;
    this.txtformatX = txtformatX;
    this.txtformatY = txtformatY;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTextFormatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTextFormatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_text_format, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTextFormatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPrint;
      Button btnPrint = ViewBindings.findChildViewById(rootView, id);
      if (btnPrint == null) {
        break missingId;
      }

      id = R.id.cb_textformat_bold;
      CheckBox cbTextformatBold = ViewBindings.findChildViewById(rootView, id);
      if (cbTextformatBold == null) {
        break missingId;
      }

      id = R.id.cb_textformat_doubleheight;
      CheckBox cbTextformatDoubleheight = ViewBindings.findChildViewById(rootView, id);
      if (cbTextformatDoubleheight == null) {
        break missingId;
      }

      id = R.id.cb_textformat_doublewidth;
      CheckBox cbTextformatDoublewidth = ViewBindings.findChildViewById(rootView, id);
      if (cbTextformatDoublewidth == null) {
        break missingId;
      }

      id = R.id.cb_textformat_inverse;
      CheckBox cbTextformatInverse = ViewBindings.findChildViewById(rootView, id);
      if (cbTextformatInverse == null) {
        break missingId;
      }

      id = R.id.itemName3;
      TextView itemName3 = ViewBindings.findChildViewById(rootView, id);
      if (itemName3 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat1;
      LinearLayout linlayoutTextformat1 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat1 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat2;
      LinearLayout linlayoutTextformat2 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat2 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat3;
      LinearLayout linlayoutTextformat3 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat3 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat4;
      LinearLayout linlayoutTextformat4 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat4 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat5;
      LinearLayout linlayoutTextformat5 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat5 == null) {
        break missingId;
      }

      id = R.id.linlayout_textformat6;
      LinearLayout linlayoutTextformat6 = ViewBindings.findChildViewById(rootView, id);
      if (linlayoutTextformat6 == null) {
        break missingId;
      }

      id = R.id.preview_dashboard_v;
      ScrollView previewDashboardV = ViewBindings.findChildViewById(rootView, id);
      if (previewDashboardV == null) {
        break missingId;
      }

      id = R.id.spnformat_codepage;
      Spinner spnformatCodepage = ViewBindings.findChildViewById(rootView, id);
      if (spnformatCodepage == null) {
        break missingId;
      }

      id = R.id.spnformat_font;
      Spinner spnformatFont = ViewBindings.findChildViewById(rootView, id);
      if (spnformatFont == null) {
        break missingId;
      }

      id = R.id.spnformat_rotation;
      Spinner spnformatRotation = ViewBindings.findChildViewById(rootView, id);
      if (spnformatRotation == null) {
        break missingId;
      }

      id = R.id.tv_textformat_bold;
      TextView tvTextformatBold = ViewBindings.findChildViewById(rootView, id);
      if (tvTextformatBold == null) {
        break missingId;
      }

      id = R.id.tv_textformat_doubleheight;
      TextView tvTextformatDoubleheight = ViewBindings.findChildViewById(rootView, id);
      if (tvTextformatDoubleheight == null) {
        break missingId;
      }

      id = R.id.tv_textformat_doublewidth;
      TextView tvTextformatDoublewidth = ViewBindings.findChildViewById(rootView, id);
      if (tvTextformatDoublewidth == null) {
        break missingId;
      }

      id = R.id.tv_textformat_inverse;
      TextView tvTextformatInverse = ViewBindings.findChildViewById(rootView, id);
      if (tvTextformatInverse == null) {
        break missingId;
      }

      id = R.id.txtText;
      EditText txtText = ViewBindings.findChildViewById(rootView, id);
      if (txtText == null) {
        break missingId;
      }

      id = R.id.txtformat_x;
      EditText txtformatX = ViewBindings.findChildViewById(rootView, id);
      if (txtformatX == null) {
        break missingId;
      }

      id = R.id.txtformat_y;
      EditText txtformatY = ViewBindings.findChildViewById(rootView, id);
      if (txtformatY == null) {
        break missingId;
      }

      return new ActivityTextFormatBinding((LinearLayout) rootView, btnPrint, cbTextformatBold,
          cbTextformatDoubleheight, cbTextformatDoublewidth, cbTextformatInverse, itemName3,
          linlayoutTextformat1, linlayoutTextformat2, linlayoutTextformat3, linlayoutTextformat4,
          linlayoutTextformat5, linlayoutTextformat6, previewDashboardV, spnformatCodepage,
          spnformatFont, spnformatRotation, tvTextformatBold, tvTextformatDoubleheight,
          tvTextformatDoublewidth, tvTextformatInverse, txtText, txtformatX, txtformatY);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
