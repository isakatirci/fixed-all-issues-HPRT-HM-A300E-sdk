// Generated by view binder compiler. Do not edit!
package com.sdk.cpcl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sdk.cpcl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAlignBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itemName3;

  @NonNull
  public final RadioGroup radioGroup1;

  @NonNull
  public final RadioButton rdoCenter;

  @NonNull
  public final RadioButton rdoLeft;

  @NonNull
  public final RadioButton rdoRight;

  private ActivityAlignBinding(@NonNull LinearLayout rootView, @NonNull TextView itemName3,
      @NonNull RadioGroup radioGroup1, @NonNull RadioButton rdoCenter, @NonNull RadioButton rdoLeft,
      @NonNull RadioButton rdoRight) {
    this.rootView = rootView;
    this.itemName3 = itemName3;
    this.radioGroup1 = radioGroup1;
    this.rdoCenter = rdoCenter;
    this.rdoLeft = rdoLeft;
    this.rdoRight = rdoRight;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_align, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemName3;
      TextView itemName3 = ViewBindings.findChildViewById(rootView, id);
      if (itemName3 == null) {
        break missingId;
      }

      id = R.id.radioGroup1;
      RadioGroup radioGroup1 = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup1 == null) {
        break missingId;
      }

      id = R.id.rdoCenter;
      RadioButton rdoCenter = ViewBindings.findChildViewById(rootView, id);
      if (rdoCenter == null) {
        break missingId;
      }

      id = R.id.rdoLeft;
      RadioButton rdoLeft = ViewBindings.findChildViewById(rootView, id);
      if (rdoLeft == null) {
        break missingId;
      }

      id = R.id.rdoRight;
      RadioButton rdoRight = ViewBindings.findChildViewById(rootView, id);
      if (rdoRight == null) {
        break missingId;
      }

      return new ActivityAlignBinding((LinearLayout) rootView, itemName3, radioGroup1, rdoCenter,
          rdoLeft, rdoRight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
